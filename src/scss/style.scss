@use "sass:math";

// Підключення міксинів ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Підключення шрифтів ===========================================================================================================================================================================================================================================================================
//&display=swap - додати при підключенні через плагін

// Підключити, якщо є локальні файли шрифтів
@import url(https://fonts.googleapis.com/css?family=Quicksand:regular,700&display=swap);

// Підключення іконкових шрифтів ==============================================================================================================================================================================================================================================================================
// Підключити, якщо є файл іконкового шрифту
//@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Налаштування шаблону ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// За замовчуванням шрифт ==============================================================================================================================================================================================================================================================================
$fontFamily: "Quicksand";
$fontSize: toRem(25); // де 14(px) - розмір шрифту за замовчуванням з макету

// Основні кольори
$mainColor: #6a6e77; // Колір шрифту за замовчуванням
$darkColor: #1c1f25;

// Палітра кольорів
// @import "base/colors-palette";

// Налаштування адаптивної сітки ===============================================================================================================================================================================================================================================================================================

// Мінімальна ширина сторінки
$minWidth: 320;
// Ширина полотна (макету)
$maxWidth: 1920;
// Ширина обмежуючого контейнера (0 = немає обмеження)
$maxWidthContainer: 0;
// Загальний відступ у контейнера
// (30 = по 15px ліворуч і праворуч, 0 = немає відступу)
$containerPadding: 480;

// Ширина спрацьовування першого брейкпоінту
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поїнти
$pc: em(
  $containerWidth
); // ПК, ноутбуки, деякі планшети у горизонтальному положенні
$tablet: em(991.98); // Планшети, деякі телефони в горизонтальному положенні
$mobile: em(767.98); // Телефони L
$mobileSmall: em(479.98); // Телефони S

// Тип адаптива:
// 1 = чуйність (у контейнера немає брейкпоінтів),
// 2 = по брейк-поїнт (контейнер змінює свою ширину по брейк-поїнт)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнулення ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// Стилі тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================
body {
  // Скролл заблоковано
  .lock & {
    overflow: hidden;
    touch-action: none;
    overscroll-behavior: none;
  }
  // Сайт завантажений
  .loaded & {
    transition: opacity 0.8s;
    opacity: 1;
  }
  @include adaptiveValue("font-size", 25, 18);
}
// Оболонка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  @supports (overflow: clip) {
    overflow: clip;
  }
  // Притискаємо footer
  > main {
    flex: 1 1 auto;
  }
  // Фікс для слайдерів
  > * {
    min-width: 0;
  }
}
// Обмежуючий контейнер ======================================================================================================================================================================================================================
/*
(i) Стилі будуть застосовуватись до
всіх класів, що містять *__container
Наприклад header__container, main__container і т.п.
Сніппет (HTML): cnt
*/
@if ($responsiveType==1) {
  // Чуйна
  [class*="__container"] {
    flex-grow: 1;
    @if ($maxWidthContainer>0) {
      max-width: toRem($containerWidth);
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      @if ($maxWidthContainer>0) {
        padding: 0 toRem(math.div($containerPadding, 2));
      } @else {
        @include adaptiveValue(
          "padding-left",
          math.div($containerPadding, 2),
          15
        );
        @include adaptiveValue(
          "padding-right",
          math.div($containerPadding, 2),
          15
        );
      }
    }
  }
} @else {
  // Брейк-поїнтами
  [class*="__container"] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: toRem($containerWidth);
    } @else {
      @if ($containerPadding>0) {
        padding: 0 toRem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: toRem(970);
    }
    @media (max-width: $tablet) {
      max-width: toRem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 toRem(math.div($containerPadding, 2));
      }
    }
  }
}

// Підключення базових стилів, шаблонів (заготівель) та допоміжних класів
// Для підключення/вимкнення конкретних стилів дивись base.scss
@import "base";

// Підключення стилів загальних елементів проекту
@import "common";

// Підключення стилів окремих блоків
@import "header";
@import "footer";

//===============================================================================================================================

.page {
  counter-reset: item;

  &__section {
    &::after {
      position: absolute;
      top: 50%;
      transform: translate(50%, -50%);
      @include adaptiveValue("right", 120, 7.5);
      counter-increment: item;
      content: counter(item, decimal-leading-zero);

      color: #e3e6ec;
      font-weight: 700;
      @include adaptiveValue("font-size", 60, 25);

      @media (max-width: $mobile) {
        top: toRem(20);
        right: 50%;
      }
    }
  }
}

//===============================================================================================================================
.screen-01 {
  &__container {
    min-height: 100%;
    display: flex;

    @media (min-width: $mobile) {
      align-items: center;
      padding-top: toRem(20);
      padding-bottom: toRem(20);
    }

    @media (max-width: $mobile) {
      padding-left: 0;
      padding-right: 0;
    }
  }

  &__body {
    flex-grow: 1;
    position: relative;
    padding-top: toRem(155);
    padding-bottom: toRem(155);
    @include adaptiveValue("padding-top", 155, 50);
    @include adaptiveValue("padding-bottom", 155, 50);
    @include adaptiveValue("padding-left", 240, 15);
    @include adaptiveValue("padding-right", 240, 15);

    &::after {
      width: 100%;
      height: 100%;

      content: "";
      position: absolute;

      top: 0;
      left: 0;
      background: rgba(28, 31, 37, 0.6);
    }

    @media (max-width: $mobile) {
      display: flex;
      justify-content: center;
      flex-direction: column;
      min-height: 100%;
    }
  }

  &__section-header {
    position: relative;
    z-index: 1;
  }

  &__image {
    width: 100%;
    height: 100%;

    position: absolute;
    top: 0;
    left: 0;
    object-fit: cover;
  }
}

//===============================================================================================================================

.screen-02 {
  &__container {
    @media (min-width: $mobile) {
      min-height: 100%;

      display: flex;
      align-items: flex-start;
    }
  }

  &__content {
    padding-top: toRem(50);
    padding-bottom: toRem(30);

    flex: 0 1 50%;
    align-self: center;

    @media (min-width: $mobile) {
      padding-bottom: toRem(50);
      padding-right: toRem(20);
    }
  }

  &__image {
    flex: 0 1 50%;
    img {
      max-width: 100%;
    }
  }
}

//===============================================================================================================================
.screen-03 {
  &__container {
    @media (min-width: $mobile) {
      min-height: 100%;

      display: flex;
      flex-direction: row-reverse;
    }
  }

  &__content {
    padding-top: toRem(50);
    padding-bottom: toRem(30);

    flex: 0 1 50%;
    align-self: center;

    @media (min-width: $mobile) {
      padding-bottom: toRem(50);
    }
  }

  &__image {
    flex: 0 1 50%;
    position: relative;

    &::after {
      content: "";
      width: 100%;
      height: 100%;

      position: absolute;
      top: 0;
      left: 0;
      background: rgba(28, 31, 37, 0.5);
    }

    img {
      max-width: 100%;
    }

    @media (min-width: $mobile) {
      padding-right: toRem(20);

      @include adaptiveValue("left", -240, -15);

      img {
        width: 100%;
        height: 100%;

        position: absolute;

        top: 0;
        left: 0;
        object-fit: cover;
      }
    }
  }

  &__values {
  }
}

.values-screen-03 {
  @include adaptiveValue("padding-top", 120, 45);

  display: grid;
  @include adaptiveValue("gap", 76, 25);

  @extend %animate;

  &__item {
    display: grid;
    grid-template-columns: repeat(2, auto);
    justify-content: space-between;
    gap: toRem(15);
  }

  &__value {
    color: $darkColor;
    font-weight: 700;
  }

  &__line {
    grid-column: span 2;
    background: rgba(28, 31, 37, 0.1);
    span {
      display: block;
      height: toRem(10);
      background-color: $darkColor;
    }
  }
}

//===============================================================================================================================

.screen-04 {
  &__container {
    min-height: 100%;
    padding-top: toRem(50);
    padding-bottom: toRem(50);

    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  &__section-header {
    &:not(:last-child) {
      @include adaptiveValue("margin-bottom", 153, 35);
    }
  }
}

.advantages {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(toRem(220), 1fr));
  @include adaptiveValue("gap", 50, 20);

  &__item {
    opacity: 0;
    transition: opacity 1s;
    transition-delay: 0s;
    .active-section & {
      @for $i from 1 through 4 {
        $delay: $i * 0.3;
        &:nth-child(#{$i}) {
          transition-delay: #{$delay}s;
        }
      }
      opacity: 1;
    }
  }

  &__icon {
    &:not(:last-child) {
      @include adaptiveValue("margin-bottom", 26, 10);
    }
  }

  &__title {
    &:not(:last-child) {
      @include adaptiveValue("margin-bottom", 32, 10);
    }
  }
}

//===============================================================================================================================
.screen-05 {
  &__container {
    @media (min-width: $mobile) {
      min-height: 100%;
      display: flex;
    }
  }

  &__content {
    padding-top: toRem(50);
    padding-bottom: toRem(30);

    flex: 0 1 50%;
    align-self: center;

    @media (min-width: $mobile) {
      padding-bottom: toRem(50);
      padding-right: toRem(20);
    }
  }

  &__images {
    flex: 0 1 50%;
    display: grid;
    grid-template-rows: repeat(2, 1fr);
  }

  &__image-ibg {
    @media (max-width: $mobile) {
      @include adaptiveValue(
        "margin-left",
        math.div(-$containerPadding, 2),
        -15
      );
      @include adaptiveValue(
        "margin-right",
        math.div(-$containerPadding, 2),
        -15
      );

      img {
        max-width: 100%;
        height: auto;
        width: auto;

        position: relative;
      }
    }
  }
}

//===============================================================================================================================
.screen-06 {
  padding-bottom: toRem(50);
  padding-top: toRem(50);

  &__container {
    @media (min-width: $tablet) {
      min-height: 100%;

      display: flex;
      align-items: center;
    }
  }

  &__section-header {
    flex: 0 1 50%;

    @media (min-width: $tablet) {
      padding-right: toRem(20);
    }

    @media (max-width: $tablet) {
      padding-bottom: toRem(30);
    }
  }

  &__services {
    flex: 0 1 50%;
  }
}

//===============================================================================================================================
.screen-07 {
  &__container {
    @media (min-width: $mobile) {
      min-height: 100%;

      display: flex;
    }
  }

  &__services {
    padding-top: toRem(50);
    padding-bottom: toRem(30);

    flex: 0 1 50%;
    align-self: center;

    @media (min-width: $mobile) {
      padding-right: toRem(20);
      padding-bottom: toRem(50);
    }
  }

  &__image {
    flex: 0 1 50%;
    position: relative;

    img {
      max-width: 100%;
    }

    @media (min-width: $mobile) {
      @include adaptiveValue("right", -240, -15);

      img {
        width: 100%;
        height: 100%;

        position: absolute;
        top: 0;
        left: 0;
        object-fit: cover;
      }
    }
  }
}

//===============================================================================================================================
.screen-08 {
  &__container {
    @media (min-width: $mobile) {
      min-height: 100%;

      display: flex;
      flex-direction: row-reverse;
    }
  }

  &__content {
    padding-top: toRem(50);
    padding-bottom: toRem(30);
    @include adaptiveValue("padding-left", 240, 30, 1, 1920, 768);

    flex: 0 1 50%;
    align-self: center;

    @media (min-width: $mobile) {
      padding-bottom: toRem(50);
    }
  }

  &__section-header {
    @include adaptiveValue("margin-bottom", 190, 30);
  }

  .projects {
    display: flex;
    @include adaptiveValue("gap", 87, 20);

    &__value {
      font-weight: 700;
      color: $darkColor;
      @include adaptiveValue("font-size", 60, 35);
      line-height: math.div(75, 60);
      &:not(:last-child) {
        margin-bottom: em(16, 60);
      }
    }
  }

  &__image {
    flex: 0 1 50%;
    position: relative;

    img {
      max-width: 100%;
      @media (min-width: $mobile) {
        width: 100%;
        height: 100%;

        position: absolute;
        top: 0;
        left: 0;
        object-fit: cover;
      }
    }
  }
}

//==============================================================================================================================
.screen-09 {
  &__container {
    min-height: 100%;

    display: flex;
    flex-direction: row-reverse;
    @media (max-width: $tablet) {
      flex-direction: column;
      padding-top: toRem(50);
    }
  }

  &__section-header {
    @media (min-width: $tablet) {
      flex: 0 0 33.333%;
      display: flex;
      justify-content: center;
      align-items: center;

      .section-header {
        text-align: center;
        writing-mode: vertical-rl;
        transform: rotate(-180deg);

        &__title {
          @include adaptiveValue("margin-right", 32, 10);
          margin-bottom: toRem(0);
        }
      }
    }
    @media (max-width: $tablet) {
      @include adaptiveValue("margin-bottom", 50, 10);
    }
  }

  &__items {
    flex: 0 0 66.667%;
    display: grid;
    grid-template-rows: repeat(2, 1fr);

    @media (max-width: $mobile) {
      @include adaptiveValue(
        "margin-left",
        math.div(-$containerPadding, 2),
        -15
      );
      @include adaptiveValue(
        "margin-right",
        math.div(-$containerPadding, 2),
        -15
      );
    }
  }
}

.item-screen-09 {
  display: flex;
  &:nth-child(odd) {
    @media (min-width: $mobileSmall) {
      flex-direction: column;
      flex-direction: row-reverse;

      .item-screen-09__body {
        text-align: right;
      }
    }
  }
  @media (max-width: $mobileSmall) {
    flex-direction: column;
  }

  &__body {
    padding: toRem(20);

    flex: 0 1 50%;
    align-self: center;

    @extend %animate;
  }

  &__title {
    &:not(:last-child) {
      @include adaptiveValue("margin-bottom", 32, 15);
    }
  }

  &__image-ibg {
    flex: 0 1 50%;

    @media (max-width: $tablet) {
      padding-bottom: 50%;
    }
  }
}

//==============================================================================================================================
.screen-10 {
  &__container {
    display: flex;
    min-height: 100%;
    padding-bottom: toRem(50);

    @media (max-width: $mobile) {
      padding-top: toRem(50);

      flex-direction: column;
      gap: toRem(30);
    }
  }

  &__item {
    flex: 0 1 33.333%;
    display: flex;
    flex-direction: column-reverse;
    justify-content: flex-end;

    @media (max-width: $mobile) {
      flex-direction: column;
      gap: toRem(20);
    }
  }

  &__image-ibg {
    flex-grow: 0;
    flex-basis: 57.407407%;

    @media (max-width: $mobile) {
      padding-bottom: 55%;
    }
  }

  &__body {
    @extend %animate;
    padding-right: toRem(15);
    @include adaptiveValue("padding-top", 60, 25, 1, 1920, 768);
  }

  &__title {
    &:not(:last-child) {
      @include adaptiveValue("margin-bottom", 32, 15);
    }
  }
}

//==============================================================================================================================
.screen-11 {
  position: relative;
  @media (min-width: $mobile) {
    &::before {
      height: 100%;
      width: 37.5%;

      content: "";
      position: absolute;
      top: 0;
      left: 0;

      background: rgba(196, 196, 196, 0.3);
    }
  }

  &__container {
    min-height: 100%;
    padding-top: toRem(50);
    padding-bottom: toRem(50);

    display: flex;
    flex-direction: row-reverse;
    align-items: center;

    position: relative;
    z-index: 2;

    @media (max-width: $mobile) {
      flex-direction: column;
    }
  }

  &__items {
    @include adaptiveValue("padding-left", 240, 30, 2, 1920, 768);

    flex: 0 1 50%;
    display: grid;
    @include adaptiveValue("gap", 60, 25);

    @media (max-width: $mobile) {
      margin-bottom: toRem(30);
    }
  }

  &__item {
    opacity: 0;
    transition: opacity 1s;
    transition-delay: 0s;
    .active-section & {
      @for $i from 1 through 4 {
        $delay: $i * 0.3;
        &:nth-child(#{$i}) {
          transition-delay: #{$delay}s;
        }
      }
      opacity: 1;
    }
  }

  &__title {
    &:not(:last-child) {
      @include adaptiveValue("margin-bottom", 32, 15);
    }
  }

  &__image {
    img {
      max-width: 100%;
    }
  }
}

//==============================================================================================================================

.screen-12 {
  &__container {
    min-height: 100%;
    display: flex;

    @media (min-width: $mobile) {
      padding-top: toRem(20);
      padding-bottom: toRem(20);

      align-items: center;
    }
    @media (max-width: $mobile) {
      padding-left: 0;
      padding-right: 0;
    }
  }

  &__body {
    @include adaptiveValue("padding-top", 250, 50);
    @include adaptiveValue("padding-bottom", 250, 50);
    @include adaptiveValue("padding-left", 240, 15);
    @include adaptiveValue("padding-right", 240, 15);

    flex-grow: 1;
    position: relative;

    &::after {
      width: 100%;
      height: 100%;

      content: "";
      position: absolute;
      top: 0;
      left: 0;
      background: rgba(28, 31, 37, 0.6);
      @media (max-width: $mobile) {
        background: rgba(28, 31, 37, 0.9);
      }
    }
    @media (max-width: $mobile) {
      display: flex;
      justify-content: center;
      flex-direction: column;
      min-height: 100%;
    }
  }

  &__image {
    width: 100%;
    height: 100%;

    position: absolute;
    top: 0;
    left: 0;
    object-fit: contain;
    background-color: #000;
  }

  &__items {
    display: flex;
    align-items: center;

    position: relative;
    z-index: 2;

    @media (max-width: $mobile) {
      flex-direction: column;
      gap: toRem(30);
    }
  }

  &__item {
    color: #e3e6ec;
    flex: 0 1 33.333%;
    text-align: center;
  }

  &__value {
    font-weight: 700;
    @include adaptiveValue("font-size", 60, 35);
    line-height: math.div(75, 60);
  }
}
